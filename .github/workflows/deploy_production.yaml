name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js and Enable Corepack
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Enable pnpm via Corepack
        run: corepack enable && corepack prepare pnpm@latest --activate

      - name: Cache pnpm Store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Pull Vercel Environment Information (Production)
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel (Production)
        run: |
          set -e
          echo "Deploying to Vercel..."
          DEPLOY_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "Deployment URL: $DEPLOY_URL"
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV

      - name: Output Deployment URL
        run: |
          echo "Vercel Production Deployment URL: ${{ env.DEPLOY_URL }}"

      - name: Add Deployment Summary
        run: |
          echo "### Vercel Production Deployment ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "| Environment | URL |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|-----|" >> $GITHUB_STEP_SUMMARY
          echo "| Production  | [${{ env.DEPLOY_URL }}](${{ env.DEPLOY_URL }}) |" >> $GITHUB_STEP_SUMMARY
